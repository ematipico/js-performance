{"version":3,"file":"js.performance.umd.js","sources":["../src/utilities/constants.js","../src/engine/markerGenerator.js","../src/engine/index.js","../src/utilities/index.js","../src/index.js"],"sourcesContent":["export const START = 'START'\r\nexport const STOP = 'STOP'\r\n","import { START, STOP } from '../utilities/constants'\r\n\r\nconst labels = {};\r\nconst internalPerformance = {\r\n  mark (label) {\r\n\r\n  }\r\n}\r\nif (process.env.NODE_ENV !== 'production') {\r\n  // performance =  internalPerformance\r\n}\r\n\r\nexport function internalStart  (label) {\r\n  labels[label] = {\r\n    start: label +'_'+ START\r\n  }\r\n  performance.mark(label +'_'+ START)\r\n}\r\n\r\nexport function internalEnd (label) {\r\n  labels[label]['stop'] = label +'_'+ STOP\r\n  performance.mark(label +'_'+ STOP)\r\n}\r\n\r\nexport function giveMeAllMeasures() {\r\n  for (const label in labels) {\r\n    const originalLabel = labels[label];\r\n    const startLabel = originalLabel.start;\r\n    const stopLabel = originalLabel.stop;\r\n    try {\r\n      performance.measure(label, startLabel, stopLabel);\r\n    } catch (e) {\r\n      throw new Error('JS Performance is trying access to marker that does not exist')\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n  const measures = performance.getEntitiesByType('measure')\r\n\r\n\r\n  return measures\r\n}\r\n","import { START, STOP } from '../utilities/constants'\r\nimport { internalStart, internalEnd, giveMeAllMeasures } from './markerGenerator'\r\n\r\nexport function getStartLabel (label) {\r\n  return `${label}_${START}`\r\n}\r\n\r\nexport let start = () => {}\r\nexport let stop = () => {}\r\n\r\n\r\nexport function recordingStart () {\r\n  start = internalStart;\r\n  stop = internalEnd;\r\n}\r\n\r\nexport function recordingStop () {\r\n  start = () => {};\r\n  stop = () => {};\r\n}\r\n\r\nexport function getMeasures () {\r\n  return giveMeAllMeasures()\r\n}\r\n\r\nexport function getMeasure (label) {\r\n  performance.getEntriesByName('', 'mark')\r\n}\r\n","import { log } from './logger'\r\n\r\nexport function allowed () {\r\n  return typeof window !== 'undefined'\r\n}\r\n\r\nexport function precise () {\r\n  return typeof window.performance !== 'undefined'\r\n}\r\nexport function support () {\r\n  let result = ''\r\n  if (allowed()) {\r\n    if (precise()) {\r\n      result = 'Your browser support the User Timing API. The measures will be precise!'\r\n    } else {\r\n      result = 'Your browser does not support the User Timing API. The measures will not be precise'\r\n    }\r\n  }\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    return result\r\n  } else {\r\n    log(result)\r\n  }\r\n}\r\n","import { recordingStart, recordingStop, getMeasures, start, stop } from './engine'\r\nimport { support } from './utilities'\r\n\r\n/**\r\n *\r\n */\r\nexport function startRecording () {\r\n  recordingStart()\r\n}\r\n\r\n/**\r\n *\r\n */\r\nexport function stopRecording () {\r\n  recordingStop()\r\n}\r\n\r\nexport function allMeasures () {\r\n  return getMeasures()\r\n}\r\n\r\n/**\r\n * [mark description]\r\n * @param  {[type]} labelToMarkWith [description]\r\n * @return {[type]}                 [description]\r\n */\r\nexport function startMark (labelToMarkWith) {\r\n  start(labelToMarkWith)\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    return labelToMarkWith\r\n  }\r\n}\r\n\r\n/**\r\n * [endMark description]\r\n * @param  {[type]} labelToMarkWith [description]\r\n * @return {[type]}                 [description]\r\n */\r\nexport function endMark (labelToMarkWith) {\r\n  stop(labelToMarkWith)\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    return labelToMarkWith\r\n  }\r\n}\r\n\r\nexport function checkSupport () {\r\n  support()\r\n}\r\n"],"names":["START","STOP","labels","process","internalStart","label","mark","internalEnd","giveMeAllMeasures","originalLabel","startLabel","start","stopLabel","stop","measure","e","Error","measures","performance","getEntitiesByType","recordingStart","recordingStop","getMeasures","allowed","window","precise","support","result","startRecording","stopRecording","allMeasures","startMark","labelToMarkWith","endMark","checkSupport"],"mappings":";;;;;;AAAO,IAAMA,QAAQ,OAAd;AACP,AAAO,IAAMC,OAAO,MAAb;;ACCP,IAAMC,SAAS,EAAf;AACA,AACe,AAIf,AAAIC,AAAJ,AAA2C;;AAI3C,AAAO,SAASC,aAAT,CAAyBC,KAAzB,EAAgC;SAC9BA,KAAP,IAAgB;WACPA,QAAO,GAAP,GAAYL;GADrB;cAGYM,IAAZ,CAAiBD,QAAO,GAAP,GAAYL,KAA7B;;;AAGF,AAAO,SAASO,WAAT,CAAsBF,KAAtB,EAA6B;SAC3BA,KAAP,EAAc,MAAd,IAAwBA,QAAO,GAAP,GAAYJ,IAApC;cACYK,IAAZ,CAAiBD,QAAO,GAAP,GAAYJ,IAA7B;;;AAGF,AAAO,SAASO,iBAAT,GAA6B;OAC7B,IAAMH,KAAX,IAAoBH,MAApB,EAA4B;QACpBO,gBAAgBP,OAAOG,KAAP,CAAtB;QACMK,aAAaD,cAAcE,KAAjC;QACMC,YAAYH,cAAcI,IAAhC;QACI;kBACUC,OAAZ,CAAoBT,KAApB,EAA2BK,UAA3B,EAAuCE,SAAvC;KADF,CAEE,OAAOG,CAAP,EAAU;YACJ,IAAIC,KAAJ,CAAU,+DAAV,CAAN;;;MAOEC,WAAWC,YAAYC,iBAAZ,CAA8B,SAA9B,CAAjB;;SAGOF,QAAP;;;ACnCK,IAAIN,QAAQ,iBAAM,EAAlB;AACP,AAAO,IAAIE,OAAO,gBAAM,EAAjB;;AAGP,AAAO,SAASO,cAAT,GAA2B;UACxBhB,aAAR;SACOG,WAAP;;;AAGF,AAAO,SAASc,aAAT,GAA0B;UACvB,iBAAM,EAAd;SACO,gBAAM,EAAb;;;AAGF,AAAO,SAASC,WAAT,GAAwB;SACtBd,mBAAP;CAGF,AAAO;;ACvBA,SAASe,OAAT,GAAoB;SAClB,OAAOC,MAAP,KAAkB,WAAzB;;;AAGF,AAAO,SAASC,OAAT,GAAoB;SAClB,OAAOD,OAAON,WAAd,KAA8B,WAArC;;AAEF,AAAO,SAASQ,OAAT,GAAoB;MACrBC,SAAS,EAAb;MACIJ,SAAJ,EAAe;QACTE,SAAJ,EAAe;eACJ,yEAAT;KADF,MAEO;eACI,qFAAT;;;EAGAtB,AAAJ,AAA2C;WAClCwB,MAAP;GADF;;;ACZK,SAASC,cAAT,GAA2B;;;;;;;AAOlC,AAAO,SAASC,aAAT,GAA0B;;;;AAIjC,AAAO,SAASC,WAAT,GAAwB;SACtBR,aAAP;;;;;;;;AAQF,AAAO,SAASS,SAAT,CAAoBC,eAApB,EAAqC;QACpCA,eAAN;EACI7B,AAAJ,AAA2C;WAClC6B,eAAP;;;;;;;;;AASJ,AAAO,SAASC,OAAT,CAAkBD,eAAlB,EAAmC;OACnCA,eAAL;EACI7B,AAAJ,AAA2C;WAClC6B,eAAP;;;;AAIJ,AAAO,SAASE,YAAT,GAAyB;;;;;;;;;;;;;"}