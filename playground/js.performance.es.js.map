{"version":3,"file":"js.performance.es.js","sources":["../src/utilities/constants.js","../src/engine/markerGenerator.js","../src/engine/index.js","../src/utilities/index.js","../src/index.js"],"sourcesContent":["export const START = 'START'\r\nexport const STOP = 'STOP'\r\n","import { START, STOP } from '../utilities/constants'\r\n\r\nconst markers = {}\r\nconst labels = {};\r\nconst internalPerformance = {\r\n  mark (label) {\r\n\r\n  }\r\n}\r\nif (process.env.NODE_ENV !== 'production') {\r\n  // performance =  internalPerformance\r\n}\r\n\r\nexport function internalStart  (label) {\r\n  const newLabel = generateUniqueLabel(label);\r\n  markers[newLabel] = label\r\n  performance.mark(label)\r\n}\r\n\r\nexport function internalEnd (label) {\r\n  markers[`${label}_${STOP}`] = label\r\n  performance.mark(label)\r\n}\r\n\r\nexport function giveMeAllMeasures() {\r\n  const measures = []\r\n\r\n  for (const label in markers) {\r\n    const originalLabel = markers[label];\r\n    const marker = performance.getEntriesByName(originalLabel, 'mark')\r\n    console.log(marker)\r\n  }\r\n\r\n\r\n  return measures\r\n}\r\nlet counter = 1;\r\n\r\nfunction getCounter () {\r\n  counter += 1;\r\n  return counter;\r\n}\r\n\r\nexport function generateUniqueLabel (label) {\r\n  const uniqueLabel = label + '_' + getCounter()\r\n  if (!labels[uniqueLabel]) {\r\n    labels[uniqueLabel] = label;\r\n    return uniqueLabel;\r\n  }  else {\r\n    return generateUniqueLabel(uniqueLabel);\r\n  }\r\n}\r\n","import { START, STOP } from '../utilities/constants'\r\nimport { internalStart, internalEnd, giveMeAllMeasures } from './markerGenerator'\r\n\r\nexport function getStartLabel (label) {\r\n  return `${label}_${START}`\r\n}\r\n\r\nexport let start = () => {}\r\nexport let stop = () => {}\r\n\r\n\r\nexport function recordingStart () {\r\n  start = internalStart;\r\n  stop = internalEnd;\r\n}\r\n\r\nexport function recordingStop () {\r\n  start = () => {};\r\n  stop = () => {};\r\n}\r\n\r\nexport function getMeasures () {\r\n  return giveMeAllMeasures()\r\n}\r\n\r\nexport function getMeasure (label) {\r\n  performance.getEntriesByName('', 'mark')\r\n}\r\n","import { log } from './logger'\r\n\r\nexport function allowed () {\r\n  return typeof window !== 'undefined'\r\n}\r\n\r\nexport function precise () {\r\n  return typeof window.performance !== 'undefined'\r\n}\r\nexport function support () {\r\n  let result = ''\r\n  if (allowed()) {\r\n    if (precise()) {\r\n      result = 'Your browser support the User Timing API. The measures will be precise!'\r\n    } else {\r\n      result = 'Your browser does not support the User Timing API. The measures will not be precise'\r\n    }\r\n  }\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    return result\r\n  } else {\r\n    log(result)\r\n  }\r\n}\r\n","import { recordingStart, recordingStop, getMeasures, start, stop } from './engine'\r\nimport { support } from './utilities'\r\n\r\n/**\r\n *\r\n */\r\nexport function startRecording () {\r\n  recordingStart()\r\n}\r\n\r\n/**\r\n *\r\n */\r\nexport function stopRecording () {\r\n  recordingStop()\r\n}\r\n\r\nexport function allMeasures () {\r\n  getMeasures()\r\n}\r\n\r\n/**\r\n * [mark description]\r\n * @param  {[type]} labelToMarkWith [description]\r\n * @return {[type]}                 [description]\r\n */\r\nexport function startMark (labelToMarkWith) {\r\n  start(labelToMarkWith)\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    return labelToMarkWith\r\n  }\r\n}\r\n\r\n/**\r\n * [endMark description]\r\n * @param  {[type]} labelToMarkWith [description]\r\n * @return {[type]}                 [description]\r\n */\r\nexport function endMark (labelToMarkWith) {\r\n  stop(labelToMarkWith)\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    return labelToMarkWith\r\n  }\r\n}\r\n\r\nexport function checkSupport () {\r\n  support()\r\n}\r\n"],"names":["STOP","markers","labels","process","internalStart","label","newLabel","generateUniqueLabel","mark","internalEnd","giveMeAllMeasures","measures","originalLabel","marker","performance","getEntriesByName","log","counter","getCounter","uniqueLabel","start","stop","recordingStart","recordingStop","getMeasures","allowed","window","precise","support","result","startRecording","stopRecording","allMeasures","startMark","labelToMarkWith","endMark","checkSupport"],"mappings":"AACO,IAAMA,OAAO,MAAb;;ACCP,IAAMC,UAAU,EAAhB;AACA,IAAMC,SAAS,EAAf;AACA,AACe,AAIf,AAAIC,AAAJ,AAA2C;;AAI3C,AAAO,SAASC,aAAT,CAAyBC,KAAzB,EAAgC;MAC/BC,WAAWC,oBAAoBF,KAApB,CAAjB;UACQC,QAAR,IAAoBD,KAApB;cACYG,IAAZ,CAAiBH,KAAjB;;;AAGF,AAAO,SAASI,WAAT,CAAsBJ,KAAtB,EAA6B;UACvBA,KAAX,SAAoBL,IAApB,IAA8BK,KAA9B;cACYG,IAAZ,CAAiBH,KAAjB;;;AAGF,AAAO,SAASK,iBAAT,GAA6B;MAC5BC,WAAW,EAAjB;;OAEK,IAAMN,KAAX,IAAoBJ,OAApB,EAA6B;QACrBW,gBAAgBX,QAAQI,KAAR,CAAtB;QACMQ,SAASC,YAAYC,gBAAZ,CAA6BH,aAA7B,EAA4C,MAA5C,CAAf;YACQI,GAAR,CAAYH,MAAZ;;;SAIKF,QAAP;;AAEF,IAAIM,UAAU,CAAd;;AAEA,SAASC,UAAT,GAAuB;aACV,CAAX;SACOD,OAAP;;;AAGF,AAAO,SAASV,mBAAT,CAA8BF,KAA9B,EAAqC;MACpCc,cAAcd,QAAQ,GAAR,GAAca,YAAlC;MACI,CAAChB,OAAOiB,WAAP,CAAL,EAA0B;WACjBA,WAAP,IAAsBd,KAAtB;WACOc,WAAP;GAFF,MAGQ;WACCZ,oBAAoBY,WAApB,CAAP;;;;AC1CG,IAAIC,QAAQ,iBAAM,EAAlB;AACP,AAAO,IAAIC,OAAO,gBAAM,EAAjB;;AAGP,AAAO,SAASC,cAAT,GAA2B;UACxBlB,aAAR;SACOK,WAAP;;;AAGF,AAAO,SAASc,aAAT,GAA0B;UACvB,iBAAM,EAAd;SACO,gBAAM,EAAb;;;AAGF,AAAO,SAASC,WAAT,GAAwB;SACtBd,mBAAP;CAGF,AAAO;;ACvBA,SAASe,OAAT,GAAoB;SAClB,OAAOC,MAAP,KAAkB,WAAzB;;;AAGF,AAAO,SAASC,OAAT,GAAoB;SAClB,OAAOD,OAAOZ,WAAd,KAA8B,WAArC;;AAEF,AAAO,SAASc,OAAT,GAAoB;MACrBC,SAAS,EAAb;MACIJ,SAAJ,EAAe;QACTE,SAAJ,EAAe;eACJ,yEAAT;KADF,MAEO;eACI,qFAAT;;;EAGAxB,AAAJ,AAA2C;WAClC0B,MAAP;GADF;;;ACZK,SAASC,cAAT,GAA2B;;;;;;;AAOlC,AAAO,SAASC,aAAT,GAA0B;;;;AAIjC,AAAO,SAASC,WAAT,GAAwB;;;;;;;;;AAS/B,AAAO,SAASC,SAAT,CAAoBC,eAApB,EAAqC;QACpCA,eAAN;EACI/B,AAAJ,AAA2C;WAClC+B,eAAP;;;;;;;;;AASJ,AAAO,SAASC,OAAT,CAAkBD,eAAlB,EAAmC;OACnCA,eAAL;EACI/B,AAAJ,AAA2C;WAClC+B,eAAP;;;;AAIJ,AAAO,SAASE,YAAT,GAAyB;;;;"}